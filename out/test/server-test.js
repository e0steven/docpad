// Generated by CoffeeScript 1.12.6
var cliPath, docpadPath, docpadUtil, equal, expectPath, joe, pathUtil, renderPath, rootPath, superagent;

pathUtil = require('path');

equal = require('assert-helpers').equal;

joe = require('joe');

superagent = require('superagent');

docpadUtil = require('../lib/util');

docpadPath = pathUtil.join(__dirname, '..', '..');

rootPath = pathUtil.join(docpadPath, 'test');

renderPath = pathUtil.join(rootPath, 'render');

expectPath = pathUtil.join(rootPath, 'render-expected');

cliPath = pathUtil.join(docpadPath, 'bin', 'docpad');

process.on('uncaughtException', function(err) {
  throw err;
});

joe.suite('docpad-custom-server', function(suite, test) {
  var docpad, docpadConfig, port, serverExpress, serverHttp;
  docpadConfig = null;
  docpad = null;
  serverExpress = null;
  serverHttp = null;
  port = null;
  test('createInstance', function(done) {
    docpadConfig = {
      port: port = 9780,
      rootPath: rootPath,
      logLevel: docpadUtil.getDefaultLogLevel(),
      skipUnsupportedPlugins: false,
      catchExceptions: false,
      serverExpress: serverExpress = require('express')(),
      serverHttp: serverHttp = require('http').createServer(serverExpress).listen(port)
    };
    serverExpress.get('/hello', function(req, res) {
      return res.send(200, 'hello world');
    });
    return docpad = require('../lib/docpad').createInstance(docpadConfig, done);
  });
  test('server action', function(done) {
    return docpad.action('server', done);
  });
  test('server bound', function(done) {
    equal(docpad.serverExpress, serverExpress, "serverExpress was bound");
    equal(docpad.serverHttp, serverHttp, "serverHttp was bound");
    return superagent.get("http://127.0.0.1:" + port + "/hello").timeout(5 * 1000).end(function(err, res) {
      equal(err, null, "no error");
      equal(res.text, 'hello world', "server was extended correctly");
      return done();
    });
  });
  return test('destroy instance', function(done) {
    return docpad.destroy(done);
  });
});
